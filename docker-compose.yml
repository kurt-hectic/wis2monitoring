version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    hostname: ${KAFKA_NAME}
    container_name: ${KAFKA_NAME}
    ports:
      - '${KAFKA_PORT}:${KAFKA_PORT}'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:${KAFKA_PORT}
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:${KAFKA_PORT}
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  wis2bridge:
    build: wis2bridge/.
    volumes:
      - ./wis2bridge:/app
    environment:
      - KAFKA_BROKER=${KAFKA_NAME}:${KAFKA_PORT}
      - TOPICS=cache/a/wis2/+/+/data/core/weather/surface-based-observations/synop,cache/a/wis2/+/data/core/weather/surface-based-observations/synop
      #- WIS_BROKER_HOST=globalbroker.meteo.fr
      #- WIS_BROKER_PORT=8883
      #- VALIDATE_SSL=True 
      - WIS_BROKER_HOST=mosquitto
      - WIS_BROKER_PORT=1883
      - VALIDATE_SSL=False
      - WIS_USERNAME=everyone
      - WIS_PASSWORD=everyone
      - LOG_LEVEL=INFO
      - KAFKA_TOPIC=${NOTIFICATION_TOPIC}
      - REPORTING_THRESHOLD=500
      - BATCH_SIZE=50
      - CLIENT_ID=wis2bridge_test_
      - CUSTOMERS_HOST=${KAFKA_NAME}
      - CUSTOMERS_PORT=${KAFKA_PORT}

    depends_on:
      - kafka
    tty: true

  notification-dedup:
    build: notification-dedup/.
    volumes:
      - ./notification-dedup:/app
    environment:
      - KAFKA_BROKER=${KAFKA_NAME}:${KAFKA_PORT}
      - KAFKA_TOPIC=${NOTIFICATION_TOPIC}
      - KAFKA_PUBTOPIC=${NOTIFICATION_TOPIC_DEDUP}
      - LOG_LEVEL=INFO
      - POLL_TIMEOUT_SEC=10
      - POLL_BATCH_SIZE=50
      - CUSTOMERS_HOST=${KAFKA_NAME}
      - CUSTOMERS_PORT=${KAFKA_PORT}
    depends_on:
      - kafka
    tty: true

  content-processor:
    build: content-processor/.
    volumes:
      - ./content-processor:/app
    environment:
      - KAFKA_BROKER=${KAFKA_NAME}:${KAFKA_PORT}
      - KAFKA_TOPIC=${NOTIFICATION_TOPIC_DEDUP}
      - KAFKA_PUBTOPIC=${NOTIFICATION_TOPIC_CONTENT}
      - LOG_LEVEL=DEBUG
      - POLL_TIMEOUT_SEC=2
      - POLL_BATCH_SIZE=10
      - NR_THREADS=2
      - CUSTOMERS_HOST=${KAFKA_NAME}
      - CUSTOMERS_PORT=${KAFKA_PORT}
    depends_on:
      - kafka
    tty: true

  mosquitto:
    image: eclipse-mosquitto
    hostname: mosquitto
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./test-broker:/etc/mosquitto
      - ./test-broker/mosquitto.conf:/mosquitto/config/mosquitto.conf
    

  mqtt-producer:
    build: ./test-node/.

    volumes:
      - ./test-node:/app

    working_dir: /app
    command: bash publoop.sh

    depends_on:
      - mosquitto

    tty: true


  test-cache:
    hostname: test-cache
    image: nginx
    ports:
      - "8080:80"
    volumes:
      - ./test-cache/njs/:/etc/nginx/njs/:ro
      - ./test-cache/cache-files:/usr/share/nginx/html
      - ./test-cache/nginx.conf:/etc/nginx/nginx.conf
    environment:
      - NGINX_HOST=test-cache
      - FAIL_RATE=0.5
    
