apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yml
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: wis2bridge
  name: wis2bridge
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: wis2bridge
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose.yml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/: "true"
        io.kompose.service: wis2bridge
    spec:
      containers:
        - env:
            - name: BATCH_SIZE
              value: "50"
            - name: CLIENT_ID
              value: wis2bridge_test_
            - name: CUSTOMERS_HOST
            - name: CUSTOMERS_PORT
            - name: KAFKA_BROKER
              value: ':'
            - name: KAFKA_TOPIC
            - name: LOG_LEVEL
              value: INFO
            - name: METRIC_PORT
            - name: REPORTING_THRESHOLD
              value: "500"
            - name: TOPICS
              value: cache/a/wis2/+/+/data/core/weather/surface-based-observations/synop,cache/a/wis2/+/data/core/weather/surface-based-observations/synop
            - name: VALIDATE_SSL
              value: "False"
            - name: WIS_BROKER_HOST
              value: mosquitto
            - name: WIS_BROKER_PORT
              value: "1883"
            - name: WIS_PASSWORD
              value: everyone
            - name: WIS_USERNAME
              value: everyone
          image: wis2bridge
          name: wis2bridge
          ports:
            - containerPort: 0
          resources: {}
          tty: true
          volumeMounts:
            - mountPath: /app
              name: wis2bridge-claim0
      restartPolicy: Always
      volumes:
        - name: wis2bridge-claim0
          persistentVolumeClaim:
            claimName: wis2bridge-claim0
status: {}
